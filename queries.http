### 2.1. Добавление новой карточки с фильмом.
POST http://localhost:{{port}}/movies/ HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "title": "Голодные игры",
  "description": "Деспотичное государство ежегодно устраивает показательные игры на выживание, за которыми в прямом эфире следит весь мир.",
  "publicationDate": "2023-01-16T00:00:00.000Z",
  "genre": "thriller",
  "releaseYear": 2013,
  "moviePreviewLink": "https://www.what-to-watch.ru/hunger_games_preview",
  "movieLink": "https://www.what-to-watch.ru/hunger_games",
  "actors": [
    "Дженнифер Лоуренс",
    "Джош Хатчерсон",
    "Лиам Хемсворт"
  ],
  "producer": "Гэри Росс",
  "durationInMinutes": 70,
  "posterPath": "hunger_games_poster.jpg",
  "backgroundImagePath": "hunger_games_bg.jpg",
  "backgroundColor": "green"
}

### 2.2. Редактирование карточки фильма.
PATCH http://localhost:{{port}}/movies/{{movie_id}} HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "title": "Король лев",
  "description": "У величественного Короля-Льва Муфасы рождается наследник по имени Симба. Уже в детстве любознательный малыш становится жертвой интриг своего завистливого дяди Шрама, мечтающего о власти. Симба познаёт горе утраты, предательство и изгнание, но в конце концов обретает верных друзей и находит любимую. Закалённый испытаниями, он в нелёгкой борьбе отвоёвывает своё законное место в «Круге жизни», осознав, что значит быть настоящим Королём.",
  "publicationDate": "2023-01-16T00:00:00.000Z",
  "genre": "drama",
  "releaseYear": 2013,
  "moviePreviewLink": "https://www.what-to-watch.ru/lion_ling_preview",
  "movieLink": "https://www.what-to-watch.ru/lion_king",
  "actors": [
    "Джеймс Эрл Джонс",
    "Мэттью Бродерик",
    "Джонатан Тейлор Томас"
  ],
  "producer": "Роджер Алерс",
  "durationInMinutes": 0,
  "posterPath": "lion_king_poster.jpg",
  "backgroundImagePath": "lion_king_bg.jpg",
  "backgroundColor": "orange",
  "isPromo": true
}

### 2.3. Удаление карточки фильма.
DELETE http://localhost:{{port}}/movies/{{movie_id}} HTTP/1.1
Authorization: Bearer {{jwt_token}}

### 2.4. Получение списка фильмов.
GET http://localhost:{{port}}/movies?limit=2 HTTP/1.1
Accept: application/json

### 2.5. Получение списка фильмов определённого жанра.
GET http://localhost:{{port}}/movies?genre=drama HTTP/1.1
Accept: application/json

### 2.6. Получение детальной информации по фильму.
GET http://localhost:{{port}}/movies/{{movie_id}} HTTP/1.1
Accept: application/json

### 2.7. Получение промо-фильма.
GET http://localhost:{{port}}/promo HTTP/1.1
Accept: application/json

### 2.8. Получить список фильмов «К просмотру».
GET http://localhost:{{port}}/favorite HTTP/1.1
Accept: application/json
Authorization: Bearer {{jwt_token}}

### 2.9.1. Добавить фильм в список «К просмотру».
POST http://localhost:{{port}}/favorite HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "movieId": "{{movie_id}}"
}

### 2.9.2. Удалить фильм из списка «К просмотру».
DELETE http://localhost:{{port}}/favorite HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "movieId": "{{movie_id}}"
}

### 2.10. Получить список комментариев для определённого фильма.
GET http://localhost:{{port}}/movies/{{movie_id}}/comments HTTP/1.1
Accept: application/json

### 2.11. Добавить новый комментарий к определённому фильму.
POST http://localhost:{{port}}/comments HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "text": "Фильм хороший",
  "rating": 9,
  "movieId": "{{movie_id}}"
}

### 2.12. Создание нового пользователя.
POST http://localhost:{{port}}/users/ HTTP/1.1
Content-Type: application/json

{
  "email": "test@mail.ru",
  "name": "Dmitrii",
  "password": "123456"
}

### 2.13. Вход в закрытую часть приложения.
POST http://localhost:{{port}}/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "test@mail.ru",
  "password": "123456"
}

### 2.14. Выход из закрытой части приложения.
// У меня JWT, а не сессии, так что выход нормально реализовать не получится?
skip

### 2.15. Проверка состояния пользователя.
GET http://localhost:{{port}}/users/ HTTP/1.1
Authorization: Bearer {{jwt_token}}

###
